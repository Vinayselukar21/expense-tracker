import Head from "next/head";
import { useState, useEffect } from "react";

export default function Home() {
  const [name, setName] = useState("");
  const [editingName, setEditingName] = useState(false);
  const [totalIncoming, setTotalIncoming] = useState(0);
  const [totalExpenses, setTotalExpenses] = useState(0);

  useEffect(() => {
    const storedName = localStorage.getItem("name");
    if (storedName) {
      setName(storedName);
    }

    const storedIncoming = localStorage.getItem("incoming");
    const storedExpenses = localStorage.getItem("expenses");

    if (storedIncoming) {
      const incoming = JSON.parse(storedIncoming);
      const total = incoming.reduce((sum, item) => sum + Number(item.amount), 0);
      setTotalIncoming(total);
    }

    if (storedExpenses) {
      const expenses = JSON.parse(storedExpenses);
      const total = expenses.reduce((sum, expense) => sum + Number(expense.amount), 0);
      setTotalExpenses(total);
    }
  }, []);

  const handleNameChange = (event) => {
    setName(event.target.value);
  };

  const handleSaveName = () => {
    localStorage.setItem("name", name);
    setEditingName(false);
  };

  const handleEditName = () => {
    setEditingName(true);
  };

  const comparisonMessage = () => {
    const difference = totalIncoming - totalExpenses;
    if (difference < 0) {
      const overspentAmount = Math.abs(difference);
      return `You Overspent by â‚¹${overspentAmount} ðŸ¥²`;
    } else if (difference > 0) {
      return `Yay! You Saved â‚¹${difference} ðŸŽ‰`;
    } else {
      return "Your Expenses and Income are Balanced";
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="p-4">
        <h2 className="text-2xl font-bold mb-4">Profile</h2>
        {!editingName ? (
          <div className="mb-4">
            <p className="text-lg font-bold mb-1">Name:</p>
            <p className="text-xl">{name}</p>
            <button
              className="text-blue-500 underline mt-1"
              onClick={handleEditName}
            >
              Edit
            </button>
          </div>
        ) : (
          <div className="mb-4">
            <label htmlFor="name" className="block text-lg font-bold mb-1">
              Name
            </label>
            <div className="flex">
              <input
                type="text"
                id="name"
                className="border rounded-l-lg px-4 py-2 w-full"
                value={name}
                onChange={handleNameChange}
              />
              <button
                className="bg-blue-500 text-white rounded-r-lg px-4 py-2"
                onClick={handleSaveName}
              >
                Save
              </button>
            </div>
          </div>
        )}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <div className="bg-white rounded-lg shadow-md p-4">
            <p className="text-xl font-bold">Total Incoming</p>
            <p className="text-3xl mt-2">â‚¹ {totalIncoming}</p>
          </div>
          <div className="bg-white rounded-lg shadow-md p-4">
            <p className="text-xl font-bold">Total Expenses</p>
            <p className="text-3xl mt-2">â‚¹ {totalExpenses}</p>
          </div>
          <div className="bg-white rounded-lg shadow-md p-4">
            <p className="text-xl font-bold">Comparison</p>
            <p className="text-lg mt-2">{comparisonMessage()}</p>
          </div>
        </div>
      </div>
    </>
  );
}
